generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  passwordHash String
  role         String   @default("user") // user, admin
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  orders       Order[]

  @@map("users")
}

model Category {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  brands      Brand[]
  products    Product[]

  @@map("categories")
}

model Brand {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  description String?
  categoryId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  products    Product[]

  @@map("brands")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  categoryId  String
  price       Decimal  @db.Decimal(10, 2)
  description String?
  images      String[]
  stock       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  brandId     String?
  sizes       String[]
  brand       Brand?   @relation(fields: [brandId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("products")
}

model Order {
  id              String   @id @default(cuid())
  userId          String
  totalPrice      Decimal  @db.Decimal(10, 2)
  status          String   @default("pending")
  iyzicoPaymentId String?
  items           Json
  shippingAddress Json
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}
